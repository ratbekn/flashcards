<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference
        Include="Microsoft.AspNetCore.SpaServices.Extensions"
        Version="3.1.3" />
    <PackageReference
        Include="Microsoft.AspNetCore.ApiAuthorization.IdentityServer"
        Version="3.1.3" />
    <PackageReference
        Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore"
        Version="3.1.3" />
    <PackageReference
        Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore"
        Version="3.1.3" />
    <PackageReference
        Include="Microsoft.AspNetCore.Identity.UI"
        Version="3.1.3" />
    <PackageReference
        Include="Microsoft.EntityFrameworkCore.Relational"
        Version="3.1.5" />
    <PackageReference
        Include="Microsoft.EntityFrameworkCore.Sqlite"
        Version="3.1.3" />
    <PackageReference
        Include="Microsoft.EntityFrameworkCore.SqlServer"
        Version="3.1.5" />
    <PackageReference
        Include="Microsoft.EntityFrameworkCore.Tools"
        Version="3.1.3" />
    <PackageReference
        Include="Microsoft.VisualStudio.Web.CodeGeneration.Design"
        Version="3.1.3" />
    <PackageReference
        Include="NSwag.AspNetCore"
        Version="13.6.0" />
  </ItemGroup>

  <ItemGroup>
    <None
        CopyToOutputDirectory="PreserveNewest"
        Update="app.db" />
    <None
        CopyToOutputDirectory="Always"
        Update="IdentityServer4Auth.pfx" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content
        Remove="$(SpaRoot)**" />
    <None
        Remove="$(SpaRoot)**" />
    <None
        Exclude="$(SpaRoot)node_modules\**"
        Include="$(SpaRoot)**" />
    <Content
        CopyToPublishDirectory="PreserveNewest"
        ExcludeFromSingleFile="true"
        Update="Pages\Shared\_LoginPartial.cshtml" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference
        Include="..\Flashcards.Domain\Flashcards.Domain.csproj" />
  </ItemGroup>

  <Target
      BeforeTargets="Build"
      Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') "
      Name="DebugEnsureNodeEnv" >
    <!-- Ensure Node.js is installed -->
    <Exec
        Command="node --version"
        ContinueOnError="true">
      <Output
          PropertyName="ErrorCode"
          TaskParameter="ExitCode" />
    </Exec>
    <Error
        Condition="'$(ErrorCode)' != '0'"
        Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message
        Importance="high"
        Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec
        Command="npm install"
        WorkingDirectory="$(SpaRoot)" />
  </Target>

  <Target
      AfterTargets="ComputeFilesToPublish"
      Name="PublishRunWebpack" >
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec
        Command="npm install"
        WorkingDirectory="$(SpaRoot)" />
    <Exec
        Command="npm run build"
        WorkingDirectory="$(SpaRoot)" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles
          Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish
          CopyToPublishDirectory="PreserveNewest"
          Exclude="@(ResolvedFileToPublish)"
          ExcludeFromSingleFile="true"
          Include="@(DistFiles->'%(FullPath)')"
          RelativePath="%(DistFiles.Identity)" />
    </ItemGroup>
  </Target>

</Project>
